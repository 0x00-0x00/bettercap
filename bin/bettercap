#!/usr/bin/env ruby

=begin

  BETTERCAP

  Author : Simone 'evilsocket' Margaritelli
  Email  : evilsocket@gmail.com
  Blog   : http://www.evilsocket.net/

  This project is released under the GPL 3 license.

=end

require 'bettercap'

begin
  puts BetterCap::BANNER.green.bold
  puts "\n\n\n"

  # We need this in order to report unhandled exceptions.
  original_argv = ARGV.clone

  # Create global context, parse command line arguments and perform basic
  # error checking.
  ctx = BetterCap::Options.parse!

  # Start targets auto discovery if needed.
  if ctx.options.target.nil?
    BetterCap::Logger.info( "Targeting the whole subnet #{ctx.ifconfig[:ip4_obj].to_range} ..." ) unless ctx.options.has_spoofer?
    ctx.discovery.start
    # give some time to the discovery thread to spawn its workers,
    # this will prevent 'Too many open files' errors to delay host
    # discovery.
    sleep 1.5
  end

  # Start network spoofers if any.
  ctx.spoofer.each do |spoofer|
    spoofer.start
  end

  # Start proxies and setup port redirection.
  if ctx.options.proxy
    if ctx.options.has_http_sniffer_enabled?
      BetterCap::Logger.warn "WARNING: Both HTTP transparent proxy and URL parser are enabled, you're gonna see duplicated logs."
    end
    ctx.create_proxies
  end

  ctx.enable_port_redirection!

  # Start local HTTP server.
  if ctx.options.httpd
    ctx.httpd = BetterCap::HTTPD::Server.new( ctx.options.httpd_port, ctx.options.httpd_path )
    ctx.httpd.start
  end

  # Start network sniffer.
  if ctx.options.sniffer
    BetterCap::Sniffer.start ctx
  elsif ctx.options.has_spoofer?
    BetterCap::Logger.warn 'WARNING: Sniffer module was NOT enabled ( -X argument ), this '\
                           'will cause the MITM to run but no data to be collected.' unless ctx.options.has_spoofer?
  end

  loop do
    sleep 10
  end

rescue SystemExit, Interrupt
  BetterCap::Logger.raw "\n"

rescue OptionParser::InvalidOption,
       OptionParser::AmbiguousOption,
       OptionParser::MissingArgument => e
  BetterCap::Logger.error "'#{e.message.capitalize}', verify your command line arguments executing 'bettercap --help'."

rescue BetterCap::Error => e
  BetterCap::Logger.error e.message

rescue Exception => e
  puts "\n\n"
  BetterCap::Logger.error "Oooops, seems like something weird occurred, please copy paste the following output " \
                          "and open a new issue on https://github.com/evilsocket/bettercap/issues :\n"

  BetterCap::Logger.error "Platform          : #{RUBY_PLATFORM}"
  BetterCap::Logger.error "Ruby Version      : #{RUBY_VERSION}"
  BetterCap::Logger.error "BetterCap Version : #{BetterCap::VERSION}"
  BetterCap::Logger.error "Command Line      : #{original_argv.join(" ")}"
  BetterCap::Logger.error "Exception         : #{e.class}"
  BetterCap::Logger.error "Message           : #{e.message}"
  BetterCap::Logger.error "Backtrace         :\n\n    #{e.backtrace.join("\n    ")}\n"

ensure
  # Make sure all the messages on the logger queue are printed.
  BetterCap::Logger.wait!

  ctx.finalize unless ctx.nil?
end
