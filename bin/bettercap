#!/usr/bin/env ruby

=begin

  BETTERCAP

  Author : Simone 'evilsocket' Margaritelli
  Email  : evilsocket@gmail.com
  Blog   : http://www.evilsocket.net/

  This project is released under the GPL 3 license.

=end

require 'bettercap'

begin
  puts BetterCap::BANNER.green.bold
  puts "\n\n\n"

  # Create global context, parse command line arguments and perform basic
  # error checking.
  ctx = Options.parse!

  # Start targets auto discovery if needed.
  if ctx.options.target.nil?
    Logger.info( "Targeting the whole subnet #{ctx.ifconfig[:ip4_obj].to_range} ..." ) unless ctx.options.has_spoofer?
    ctx.discovery.start
  end

  # Start network spoofers if any.
  ctx.spoofer.each do |spoofer|
    spoofer.start
  end

  # Start proxies and setup port redirection.
  if ctx.options.proxy
    if ctx.options.has_http_sniffer_enabled?
      Logger.warn "WARNING: Both HTTP transparent proxy and URL parser are enabled, you're gonna see duplicated logs."
    end
    ctx.create_proxies
  end

  ctx.enable_port_redirection!

  # Start local HTTP server.
  if ctx.options.httpd
    ctx.httpd = HTTPD::Server.new( ctx.options.httpd_port, ctx.options.httpd_path )
    ctx.httpd.start
  end

  # Start network sniffer.
  if ctx.options.sniffer
    Sniffer.start ctx
  else
    Logger.warn 'WARNING: Sniffer module was NOT enabled ( -X argument ), this '\
                'will cause the MITM to run but no data to be collected.' unless ctx.options.has_spoofer?
  end

  loop do
    sleep 10
  end

rescue SystemExit, Interrupt
  Logger.raw "\n"

rescue BetterCap::Error => e
  Logger.error e.message

rescue Exception => e
  Logger.error e.message
  Logger.error e.backtrace.join("\n")

ensure
  ctx.finalize unless ctx.nil?
end
